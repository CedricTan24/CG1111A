#define LOGIC1 11
#define LOGIC2 12
#define LDR_PIN 0
int greyDiff[3];
int whiteArray[3];
int blackArray[3];
#define red 0
#define green 1
#define blue 2

void shineRed() {
    digitalWrite(LOGIC1, LOW);
    digitalWrite(LOGIC2, LOW);
}
void shineGreen() {
    digitalWrite(LOGIC1, HIGH);
    digitalWrite(LOGIC2, LOW);
}
void shineBlue() {
    digitalWrite(LOGIC1, LOW);
    digitalWrite(LOGIC2, HIGH);
}

void shine(int c) {
  if (c == red) {
    shineRed();
  } else if (c == green) {
    shineGreen();
  } else {
    shineBlue();
  }
}

void setup() {
  Serial.begin(9600); 
  pinMode(LOGIC1, OUTPUT);
  pinMode(LOGIC2, OUTPUT);
}

void setBalance() {
  Serial.println("Put White Sample For Calibration ...");
  delay(5000);  
  for (int i = 0; i <= 2; i++) {
    shine(i);
    delay(300);
    whiteArray[i] = getAvgReading(5);  
    delay(300);
  }


  Serial.println("Put Black Sample For Calibration ...");
  delay(5000);  //delay for five seconds for getting sample ready
  //go through one colour at a time, set the minimum reading for red, green and blue to the black array
  for (int i = 0; i <= 2; i++) {
    shine(i);
    delay(300);
    blackArray[i] = getAvgReading(5);
    delay(300);

    greyDiff[i] = whiteArray[i] - blackArray[i];
  }

  Serial.println("Colour Sensor Is Ready.");
  delay(5000);
} 

int detectColour()
{ 
  float colourArray[3] = {0};

  // Shine Red, read LDR
  digitalWrite(11, LOW);
  digitalWrite(12, LOW);
  delay(1000);               // Wait for light to stabilize
  colourArray[0] = ((analogRead(LDR_PIN) - blackArray[0]) / greyDiff[0]) * 255;
  Serial.print("Red value: ");
  Serial.println(colourArray[0]);

  // Shine Green, read LDR
  digitalWrite(11, LOW);
  digitalWrite(12, HIGH);
  delay(1000);
  colourArray[1] = ((analogRead(LDR_PIN) - blackArray[1]) / greyDiff[1]) * 255;
  Serial.print("Green value: ");
  Serial.println(colourArray[1]);

  // Shine Blue, read LDR
  digitalWrite(11, HIGH);
  digitalWrite(12, LOW);
  delay(1000);
  colourArray[2] = ((analogRead(LDR_PIN) - blackArray[2]) / greyDiff[2]) * 255;
  Serial.print("Blue value: ");
  Serial.println(colourArray[2]);
}

int getAvgReading(int times) {
  int total = 0;
  for (int i = 0; i < times; i++) {
    total += analogRead(A0);
    delay(10);
  }
  return total / times;
}

void loop() {
  setBalance();
  for (long i = 0; i < 5; i += 1) {
  detectColour();
}
}
